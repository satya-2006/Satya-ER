-- =========================
-- UNIVERSITY MANAGEMENT DB
-- =========================

CREATE TABLE Departments (
    dept_id INT PRIMARY KEY AUTO_INCREMENT,
    dept_name VARCHAR(200) NOT NULL UNIQUE
);

CREATE TABLE Teachers (
    teacher_id INT PRIMARY KEY AUTO_INCREMENT,
    teacher_name VARCHAR(200) NOT NULL,
    email VARCHAR(150) UNIQUE NOT NULL,
    phone_number VARCHAR(15),
    dept_id INT,
    FOREIGN KEY (dept_id) REFERENCES Departments(dept_id)
);

CREATE TABLE Students (
    student_id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    email VARCHAR(150) UNIQUE NOT NULL,
    phone_number VARCHAR(15),
    enrollment_year YEAR NOT NULL,
    dept_id INT,
    address TEXT,
    FOREIGN KEY (dept_id) REFERENCES Departments(dept_id)
);

CREATE TABLE Logins (
    login_id INT PRIMARY KEY AUTO_INCREMENT,
    student_id INT,
    teacher_id INT,
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role ENUM('Student','Teacher') NOT NULL,
    FOREIGN KEY (student_id) REFERENCES Students(student_id) ON DELETE CASCADE,
    FOREIGN KEY (teacher_id) REFERENCES Teachers(teacher_id) ON DELETE CASCADE
);

CREATE TABLE Courses (
    course_id INT PRIMARY KEY AUTO_INCREMENT,
    course_name VARCHAR(200) NOT NULL,
    credits INT NOT NULL,
    dept_id INT,
    teacher_id INT,
    year_offered YEAR,
    FOREIGN KEY (dept_id) REFERENCES Departments(dept_id),
    FOREIGN KEY (teacher_id) REFERENCES Teachers(teacher_id)
);

CREATE TABLE Enrollments (
    enrollment_id INT PRIMARY KEY AUTO_INCREMENT,
    student_id INT NOT NULL,
    course_id INT NOT NULL,
    enrollment_date DATE NOT NULL,
    grade VARCHAR(2),
    FOREIGN KEY (student_id) REFERENCES Students(student_id) ON DELETE CASCADE,
    FOREIGN KEY (course_id) REFERENCES Courses(course_id) ON DELETE CASCADE
);

CREATE TABLE Payments (
    payment_id INT PRIMARY KEY AUTO_INCREMENT,
    student_id INT NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    payment_date DATE NOT NULL,
    status ENUM('Pending','Completed') DEFAULT 'Pending',
    FOREIGN KEY (student_id) REFERENCES Students(student_id)
);

-- =========================
-- INSERT SAMPLE DATA
-- =========================

-- Departments
INSERT INTO Departments (dept_name) VALUES
('Computer Science'), ('Mechanical Engineering'), ('Electrical Engineering'), ('Business Administration');
SELECT * FROM Departments;

-- Teachers
INSERT INTO Teachers (teacher_name, email, phone_number, dept_id) VALUES
('Dr. Asha Mehta', 'asha.mehta@univ.com', '9876500001', 1),
('Prof. Ramesh Rao', 'ramesh.rao@univ.com', '9876500002', 2),
('Dr. Kavita Sharma', 'kavita.sharma@univ.com', '9876500003', 3),
('Prof. Vikram Jain', 'vikram.jain@univ.com', '9876500004', 4);
SELECT * FROM Teachers;

-- Students
INSERT INTO Students (first_name, last_name, email, phone_number, enrollment_year, dept_id, address) VALUES
('Rahul', 'Verma', 'rahul.verma@stu.univ.com', '9876501001', 2023, 1, 'Sector 45, Chandigarh'),
('Sneha', 'Patil', 'sneha.patil@stu.univ.com', '9876501002', 2024, 2, 'Kothrud, Pune'),
('Aman', 'Gupta', 'aman.gupta@stu.univ.com', '9876501003', 2022, 3, 'Indira Nagar, Lucknow');
SELECT * FROM Students;

-- Logins
INSERT INTO Logins (student_id, teacher_id, username, password, role) VALUES
(1, NULL, 'rahulv', 'pass123', 'Student'),
(2, NULL, 'snehap', 'pass234', 'Student'),
(3, NULL, 'amang', 'pass345', 'Student'),
(NULL, 1, 'asha.m', 'teach123', 'Teacher'),
(NULL, 2, 'ramesh.r', 'teach234', 'Teacher');
SELECT * FROM Logins;

-- Courses
INSERT INTO Courses (course_name, credits, dept_id, teacher_id, year_offered) VALUES
('Data Structures', 4, 1, 1, 2025),
('Thermodynamics', 3, 2, 2, 2025),
('Power Systems', 4, 3, 3, 2025),
('Financial Accounting', 3, 4, 4, 2025);
SELECT * FROM Courses;

-- Enrollments
INSERT INTO Enrollments (student_id, course_id, enrollment_date, grade) VALUES
(1, 1, '2025-07-01', 'A'),
(2, 2, '2025-07-05', NULL),
(3, 3, '2025-07-10', 'B');
SELECT * FROM Enrollments;

-- Payments
INSERT INTO Payments (student_id, amount, payment_date, status) VALUES
(1, 50000.00, '2025-08-01', 'Completed'),
(2, 45000.00, '2025-08-10', 'Pending'),
(3, 47000.00, '2025-07-20', 'Completed');
SELECT * FROM Payments;
